version: '3.4'

services:
  php:
    build:
      context: './api'
      target: 'dev'
    environment:
      COMPOSER_CACHE_DIR: '/home/composer/.cache/composer'
      COMPOSER_HOME: '/home/composer/.config/composer'
      PHP_CONF_DISPLAY_ERRORS: 1
      PHP_CONF_DISPLAY_STARTUP_ERRORS: 1
      PHP_CONF_ERROR_REPORTING: 32767
      PHP_CONF_OPCACHE_VALIDATE_TIMESTAMP: 1
      PHP_CONF_ZEND_ASSERTIONS: 1
      PHP_IDE_CONFIG: 'serverName=app-skeleton-php'
      XDEBUG_CONFIG: 'client_host=172.17.0.1'
      XDEBUG_MODE: '${XDEBUG_MODE:-off}'
    image: 'carcel/skeleton/dev:php'
    user: '${HOST_USER_IDS:-1000:1000}'
    volumes:
      - './api:/srv/app:rw'
      - '${HOST_COMPOSER_CACHE_DIR:-~/.cache/composer}:/home/composer/.cache/composer'
      - '${HOST_COMPOSER_HOME:-~/.config/composer}:/home/composer/.config/composer'
    working_dir: '/srv/app'

  api-dev:
    build:
      context: './api'
      target: 'dev'
    command: 'php -S 0.0.0.0:8000'
    environment:
      PHP_CONF_DISPLAY_ERRORS: 1
      PHP_CONF_DISPLAY_STARTUP_ERRORS: 1
      PHP_CONF_ERROR_REPORTING: 32767
      PHP_CONF_OPCACHE_VALIDATE_TIMESTAMP: 1
      PHP_CONF_ZEND_ASSERTIONS: 1
      PHP_IDE_CONFIG: 'serverName=app-skeleton-api'
      XDEBUG_CONFIG: 'client_host=172.17.0.1'
      XDEBUG_MODE: '${XDEBUG_MODE:-off}'
    expose:
      - '8000'
    image: 'carcel/skeleton/dev:php'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api-dev.entrypoints=web'
      - 'traefik.http.routers.api-dev.rule=Host(`skeleton-api.docker.localhost`)'
    user: '${HOST_USER_IDS:-1000:1000}'
    volumes:
      - './api:/srv/app:rw'
    working_dir: '/srv/app/public'

  fpm:
    build:
      context: './api'
      target: 'api-fpm'
    command: 'php-fpm -F'
    image: 'carcel/skeleton/api:fpm'
    restart: 'always'

  api:
    build:
      context: './api'
      target: 'api-nginx'
    depends_on:
      - fpm
    image: 'carcel/skeleton/api:nginx'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api.entrypoints=websecure'
      - 'traefik.http.routers.api.rule=Host(`skeleton-api.docker.localhost`)'
      - 'traefik.http.routers.api.tls=true'
    restart: on-failure

  database:
    environment:
      POSTGRES_DB: '${PGSQL_DB:-app_skeleton}'
      POSTGRES_USER: '${PGSQL_USERNAME:-app_skeleton}'
      POSTGRES_PASSWORD: '${PGSQL_PASSWORD:-app_skeleton}'
    image: 'postgres:13'
    ports:
      - '5432:5432'
    restart: unless-stopped

  node:
    environment:
      YARN_CACHE_FOLDER: '/home/yarn-cache'
    image: 'node:slim'
    user: '${HOST_USER_IDS:-1000:1000}'
    volumes:
      - './client:/srv/app'
      - '${HOST_YARN_CACHE_FOLDER:-~/.cache/yarn}:/home/yarn-cache'
      - '${HOST_YARN_CONFIG_FOLDER:-~/.yarn}:/.yarn'
      - '${HOST_YARN_CONFIG_FILE:-~/.yarnrc}:/.yarnrc'
    working_dir: '/srv/app'

  client-dev:
    command: 'yarn start'
    environment:
      REACT_APP_API_BASE_URL: 'http://skeleton-api.docker.localhost'
    expose:
      - '3000'
    image: 'node:slim'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.client-dev.entrypoints=web'
      - 'traefik.http.routers.client-dev.rule=Host(`skeleton.docker.localhost`)'
      - 'traefik.http.routers.client-dev.rule=PathPrefix(`/`)'
    restart: on-failure
    tty: true
    user: '${HOST_USER_IDS:-1000:1000}'
    volumes:
      - './client:/srv/app'
    working_dir: '/srv/app'

  client:
    build:
      args:
        API_BASE_URL_FOR_PRODUCTION: 'https://skeleton-api.docker.localhost'
      context: './client'
      target: 'client'
    image: 'carcel/skeleton/client:latest'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.client.entrypoints=websecure'
      - 'traefik.http.routers.client.rule=Host(`skeleton.docker.localhost`)'
      - 'traefik.http.routers.client.rule=PathPrefix(`/`)'
      - 'traefik.http.routers.client.tls=true'
    restart: on-failure

  traefik:
    image: 'traefik'
    ports:
      - '80:80'
      - '443:443'
      - '8080:8080'
    restart: always
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - './traefik/dynamic:/etc/traefik/dynamic:ro'
      - './traefik/ssl:/etc/traefik/ssl:ro'
      - './traefik/traefik.yaml:/etc/traefik/traefik.yaml:ro'
